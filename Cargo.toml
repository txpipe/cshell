[package]
name = "cshell"
version = "0.2.1"
edition = "2021"
rust-version = "1.82.0"

authors = [
    "Dominic Mayhew <dominic.mayhew@txpipe.io>",
    "Santiago Carmuega <santiago@txpipe.io>"
    ]
description = "A Cardano wallet CLI built for developers."
readme = "README.md"
repository = "https://github.com/txpipe/cshell"
license = "Apache-2.0"

keywords = ["cardano", "blockchain", "wallet", "cardano"]
categories = ["command-line-utilities", "blockchain", "cardano", "wallet"]

[dependencies]
bech32 = "0.9.1"
bip39 = { version = "2.0.0", features = ["rand_core"] }
chrono = { version = "0.4.39", features = ["serde"] }
clap = { version = "4.5.29", features = ["derive", "env"] }
comfy-table = "7.1.1"
crossterm = { version = "0.28.1", features = ["event-stream"] }
cryptoxide = "0.4.4"
ed25519-bip32 = "0.4.1"
futures = "0.3.31"
hex = { version = "0.4.3", features = ["serde"] }
inquire = "0.7.4"
jsonrpsee = { version = "0", features = ["client"] }
miette = { version = "7.2.0", features = ["fancy"] }
pallas = { version = "1.0.0-alpha.1", features = ["hardano"] }
prost = "0.13.5"
rand = "0.8.5"
rand_core = {version = "0.6.4"}
ratatui = "0.29.0"
serde = { version = "1.0.217", features = ["derive"] }
serde_with = "3.12.0"
serde_json = "1.0.140"
slug = "0.1.5"
strum = { version = "0.27.1", features = ["derive"] }
tokio = { version = "1.43.0", features = ["full"] }
tokio-stream = "0.1.17"
toml = "0.8.20"
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
tx3-lang = "0.2.0"
tx3-cardano = "0.2.0"
url = { version = "2.5.0", features = ["serde"] }
utxorpc = "0.10.0"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.14.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "txpipe/homebrew-tap"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu"]
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "1.82.0"
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@txpipe"

[workspace.metadata.release]
push = false
publish = false
pre-release-hook = ["git", "cliff", "-o", "CHANGELOG.md", "--tag", "{{version}}"]

[workspace.metadata.dist.github-custom-runners]
x86_64-unknown-linux-gnu = "ubuntu-24.04"
aarch64-apple-darwin = "macos-14"
x86_64-apple-darwin = "macos-13"
aarch64-unknown-linux-gnu = "ubuntu-22.04-arm"
